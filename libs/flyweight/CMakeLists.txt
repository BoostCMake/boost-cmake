cmake_minimum_required(VERSION 3.5)
project(${CMAKE_WORKSPACE_NAME}_flyweight)

find_package(BCM)
include(BCMDeploy)
include(BCMSetupVersion)

find_package(${CMAKE_WORKSPACE_NAME}_core)
find_package(${CMAKE_WORKSPACE_NAME}_config)
find_package(${CMAKE_WORKSPACE_NAME}_mpl)
find_package(${CMAKE_WORKSPACE_NAME}_detail)
find_package(${CMAKE_WORKSPACE_NAME}_functional)
find_package(${CMAKE_WORKSPACE_NAME}_assert)
find_package(${CMAKE_WORKSPACE_NAME}_interprocess)
find_package(${CMAKE_WORKSPACE_NAME}_type_traits)
find_package(${CMAKE_WORKSPACE_NAME}_preprocessor)
find_package(${CMAKE_WORKSPACE_NAME}_serialization)
find_package(${CMAKE_WORKSPACE_NAME}_multi_index)
find_package(${CMAKE_WORKSPACE_NAME}_parameter)
find_package(${CMAKE_WORKSPACE_NAME}_throw_exception)
find_package(${CMAKE_WORKSPACE_NAME}_smart_ptr)

bcm_setup_version(VERSION 1.58.0)

add_library(${CMAKE_WORKSPACE_NAME}_flyweight INTERFACE)
set_property(TARGET ${CMAKE_WORKSPACE_NAME}_flyweight PROPERTY EXPORT_NAME flyweight)

target_link_libraries(${CMAKE_WORKSPACE_NAME}_flyweight INTERFACE boost::core)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_flyweight INTERFACE boost::config)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_flyweight INTERFACE boost::mpl)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_flyweight INTERFACE boost::detail)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_flyweight INTERFACE boost::functional)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_flyweight INTERFACE boost::assert)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_flyweight INTERFACE boost::interprocess)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_flyweight INTERFACE boost::type_traits)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_flyweight INTERFACE boost::preprocessor)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_flyweight INTERFACE boost::serialization)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_flyweight INTERFACE boost::multi_index)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_flyweight INTERFACE boost::parameter)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_flyweight INTERFACE boost::throw_exception)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_flyweight INTERFACE boost::smart_ptr)


bcm_deploy(TARGETS ${CMAKE_WORKSPACE_NAME}_flyweight INCLUDE include NAMESPACE ${CMAKE_WORKSPACE_NAME}::)

add_subdirectory(test)
