cmake_minimum_required(VERSION 3.5)
project(${CMAKE_WORKSPACE_NAME}_ptr_container)

find_package(BCM)
include(BCMDeploy)
include(BCMSetupVersion)

find_package(${CMAKE_WORKSPACE_NAME}_core)
find_package(${CMAKE_WORKSPACE_NAME}_static_assert)
find_package(${CMAKE_WORKSPACE_NAME}_iterator)
find_package(${CMAKE_WORKSPACE_NAME}_mpl)
find_package(${CMAKE_WORKSPACE_NAME}_smart_ptr)
find_package(${CMAKE_WORKSPACE_NAME}_assert)
find_package(${CMAKE_WORKSPACE_NAME}_range)
find_package(${CMAKE_WORKSPACE_NAME}_type_traits)
find_package(${CMAKE_WORKSPACE_NAME}_circular_buffer)
find_package(${CMAKE_WORKSPACE_NAME}_serialization)
find_package(${CMAKE_WORKSPACE_NAME}_array)
find_package(${CMAKE_WORKSPACE_NAME}_config)
find_package(${CMAKE_WORKSPACE_NAME}_unordered)
find_package(${CMAKE_WORKSPACE_NAME}_utility)

bcm_setup_version(VERSION 1.58.0)

add_library(${CMAKE_WORKSPACE_NAME}_ptr_container INTERFACE)
set_property(TARGET ${CMAKE_WORKSPACE_NAME}_ptr_container PROPERTY EXPORT_NAME ptr_container)

target_link_libraries(${CMAKE_WORKSPACE_NAME}_ptr_container INTERFACE boost::core)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_ptr_container INTERFACE boost::static_assert)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_ptr_container INTERFACE boost::iterator)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_ptr_container INTERFACE boost::mpl)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_ptr_container INTERFACE boost::smart_ptr)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_ptr_container INTERFACE boost::assert)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_ptr_container INTERFACE boost::range)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_ptr_container INTERFACE boost::type_traits)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_ptr_container INTERFACE boost::circular_buffer)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_ptr_container INTERFACE boost::serialization)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_ptr_container INTERFACE boost::array)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_ptr_container INTERFACE boost::config)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_ptr_container INTERFACE boost::unordered)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_ptr_container INTERFACE boost::utility)


bcm_deploy(TARGETS ${CMAKE_WORKSPACE_NAME}_ptr_container INCLUDE include NAMESPACE ${CMAKE_WORKSPACE_NAME}::)

add_subdirectory(test)
