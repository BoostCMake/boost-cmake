cmake_minimum_required(VERSION 3.5)
project(${CMAKE_WORKSPACE_NAME}_msm)

find_package(BCM)
include(BCMDeploy)
include(BCMSetupVersion)

find_package(${CMAKE_WORKSPACE_NAME}_function)
find_package(${CMAKE_WORKSPACE_NAME}_core)
find_package(${CMAKE_WORKSPACE_NAME}_phoenix)
find_package(${CMAKE_WORKSPACE_NAME}_proto)
find_package(${CMAKE_WORKSPACE_NAME}_bind)
find_package(${CMAKE_WORKSPACE_NAME}_mpl)
find_package(${CMAKE_WORKSPACE_NAME}_tuple)
find_package(${CMAKE_WORKSPACE_NAME}_fusion)
find_package(${CMAKE_WORKSPACE_NAME}_assert)
find_package(${CMAKE_WORKSPACE_NAME}_type_traits)
find_package(${CMAKE_WORKSPACE_NAME}_preprocessor)
find_package(${CMAKE_WORKSPACE_NAME}_circular_buffer)
find_package(${CMAKE_WORKSPACE_NAME}_serialization)
find_package(${CMAKE_WORKSPACE_NAME}_config)
find_package(${CMAKE_WORKSPACE_NAME}_parameter)
find_package(${CMAKE_WORKSPACE_NAME}_any)
find_package(${CMAKE_WORKSPACE_NAME}_typeof)

bcm_setup_version(VERSION 1.58.0)

add_library(${CMAKE_WORKSPACE_NAME}_msm INTERFACE)
set_property(TARGET ${CMAKE_WORKSPACE_NAME}_msm PROPERTY EXPORT_NAME msm)

target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::function)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::core)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::phoenix)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::proto)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::bind)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::mpl)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::tuple)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::fusion)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::assert)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::type_traits)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::preprocessor)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::circular_buffer)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::serialization)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::config)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::parameter)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::any)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_msm INTERFACE boost::typeof)


bcm_deploy(TARGETS ${CMAKE_WORKSPACE_NAME}_msm INCLUDE include NAMESPACE ${CMAKE_WORKSPACE_NAME}::)

add_subdirectory(test)
