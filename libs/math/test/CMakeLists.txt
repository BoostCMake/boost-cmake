include(CMTest)

patch_directory(${CURRENT_TEST_SOURCES_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/files ${CMAKE_CURRENT_BINARY_DIR})
patch_directory(${CURRENT_SOURCES_DIR}/octonion ${CMAKE_SOURCE_DIR}/libs/math/octonion/files ${CMAKE_BINARY_DIR}/libs/math/octonion)
patch_directory(${CURRENT_SOURCES_DIR}/quaternion ${CMAKE_SOURCE_DIR}/libs/math/quaternion/files ${CMAKE_BINARY_DIR}/libs/math/quaternion)
patch_directory(${CURRENT_SOURCES_DIR}/special_functions ${CMAKE_SOURCE_DIR}/libs/math/special_functions/files ${CMAKE_BINARY_DIR}/libs/math/special_functions)


find_package(${CMAKE_WORKSPACE_NAME}_regex)
find_package(${CMAKE_WORKSPACE_NAME}_multiprecision)
find_package(${CMAKE_WORKSPACE_NAME}_bind)
find_package(${CMAKE_WORKSPACE_NAME}_random)
find_package(${CMAKE_WORKSPACE_NAME}_typeof)
find_package(${CMAKE_WORKSPACE_NAME}_test)
find_package(${CMAKE_WORKSPACE_NAME}_serialization)
find_package(${CMAKE_WORKSPACE_NAME}_numeric_ublas)

cm_test_link_libraries(${CMAKE_WORKSPACE_NAME}_math
                        ${CMAKE_WORKSPACE_NAME}::regex
                        ${CMAKE_WORKSPACE_NAME}::multiprecision
                        ${CMAKE_WORKSPACE_NAME}::bind
                        ${CMAKE_WORKSPACE_NAME}::random
                        ${CMAKE_WORKSPACE_NAME}::typeof
                        ${CMAKE_WORKSPACE_NAME}::serialization
                        ${CMAKE_WORKSPACE_NAME}::numeric_ublas
                        ${CMAKE_WORKSPACE_NAME}::test
                        )

add_subdirectory(test_instances)
cm_test_link_libraries(test_instances)

# HACK: Workaround broken includes
file(GLOB TEST_HEADERS RELATIVE ${CURRENT_TEST_SOURCES_DIR} ${CURRENT_TEST_SOURCES_DIR}/*.hpp)
foreach(HEADER ${TEST_HEADERS})
    configure_file(${CURRENT_TEST_SOURCES_DIR}/${HEADER} `${CMAKE_CURRENT_BINARY_DIR}/include/libs/math/test/`${HEADER} @ONLY)
endforeach()

add_library(${CMAKE_WORKSPACE_NAME}_math_test_options INTERFACE)
cm_test_link_libraries(${CMAKE_WORKSPACE_NAME}_math_test_options)
target_include_directories(${CMAKE_WORKSPACE_NAME}_math_test_options INTERFACE . test_instances ../include_private ${CMAKE_CURRENT_BINARY_DIR}/include)

# Copyright Daryle Walker, Hubert Holin, John Maddock 2006 - 2007
# copyright Paul A. Bristow 2006 - 2010
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE_1_0.txt or copy at
# http://www.boost.org/LICENSE_1_0.txt.
# \math_toolkit\libs\math\test\jamfile.v2
# Runs all math toolkit tests, functions & distributions,
# and build math examples.

# bring in the rules for testing


#
# PCH support is broken when --remove-test-targets is specified on the command
# line.  Disable it until someone fixes this.
#


#<toolset>intel-linux:<pch>off
# <toolset>msvc:<cxxflags>/wd4506 has no effect?
# suppress xstring(237) : warning C4506: no definition for inline function
# For simplicities sake, make everything a static lib:


#lib test_instances : float_test_instances.cpp double_test_instances.cpp ldouble_test_instances.cpp real_concept_test_instances.cpp pch
#                   : <link>static ;
try_compile(HAS_GMPXX ${CMAKE_CURRENT_BINARY_DIR}/../config ${CURRENT_TEST_SOURCES_DIR}/../config/has_gmpxx.cpp)
try_compile(HAS_FLOAT128 ${CMAKE_CURRENT_BINARY_DIR}/../config ${CURRENT_TEST_SOURCES_DIR}/../config/has_float128.cpp)
try_compile(HAS_NTL_RR ${CMAKE_CURRENT_BINARY_DIR}/../config ${CURRENT_TEST_SOURCES_DIR}/../config/has_ntl_rr.cpp)
try_compile(HAS_MPFR_CLASS ${CMAKE_CURRENT_BINARY_DIR}/../config ${CURRENT_TEST_SOURCES_DIR}/../config/has_mpfr_class.cpp)
try_compile(HAS_MPREAL ${CMAKE_CURRENT_BINARY_DIR}/../config ${CURRENT_TEST_SOURCES_DIR}/../config/has_mpreal.cpp)
try_compile(HAS_E_FLOAT ${CMAKE_CURRENT_BINARY_DIR}/../config ${CURRENT_TEST_SOURCES_DIR}/../config/has_e_float.cpp)
try_compile(HAS_INTEL_QUAD ${CMAKE_CURRENT_BINARY_DIR}/../config ${CURRENT_TEST_SOURCES_DIR}/../config/has_intel_quad.cpp)
try_compile(HAS_128BIT_FLOATMAX_T ${CMAKE_CURRENT_BINARY_DIR}/../config ${CURRENT_TEST_SOURCES_DIR}/../config/has_128bit_floatmax_t.cpp)


cm_test(NAME math_test_hypot_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/hypot_test.cpp )
target_link_libraries(math_test_hypot_test ${CMAKE_WORKSPACE_NAME}::test)
cm_test(NAME math_test_pow_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/pow_test.cpp )
cm_test(NAME math_test_log1p_expm1_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/log1p_expm1_test.cpp )
cm_test(NAME math_test_powm1_sqrtp1m1_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/powm1_sqrtp1m1_test.cpp )
cm_test(NAME math_test_special_functions_test SOURCES ${CMAKE_CURRENT_BINARY_DIR}/special_functions_test.cpp SOURCES_PREFIX ${CURRENT_TEST_SOURCES_DIR})
target_link_libraries(math_test_special_functions_test ${CMAKE_WORKSPACE_NAME}::test)
cm_test(NAME math_test_test_airy SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_airy.cpp )
cm_test(NAME math_test_test_arcsine SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_arcsine.cpp )
cm_test(NAME math_test_test_bernoulli SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_bernoulli.cpp )
cm_test(NAME math_test_test_constants SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_constants.cpp )
cm_test(NAME math_test_test_print_info_on_type SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_print_info_on_type.cpp )
cm_test(NAME math_test_test_constant_generate SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_constant_generate.cpp )
set_target_properties(math_test_test_constant_generate PROPERTIES CXX_EXCEPTIONS off)
target_compile_definitions(math_test_test_constant_generate PUBLIC USE_CPP_FLOAT=1)
cm_test(NAME math_test_test_bessel_j SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_bessel_j.cpp )
cm_test(NAME math_test_test_bessel_y SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_bessel_y.cpp )
cm_test(NAME math_test_test_bessel_i SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_bessel_i.cpp )
cm_test(NAME math_test_test_bessel_k SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_bessel_k.cpp )
cm_test(NAME math_test_test_bessel_j_prime SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_bessel_j_prime.cpp )
cm_test(NAME math_test_test_bessel_y_prime SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_bessel_y_prime.cpp )
cm_test(NAME math_test_test_bessel_i_prime SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_bessel_i_prime.cpp )
cm_test(NAME math_test_test_bessel_k_prime SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_bessel_k_prime.cpp )
cm_test(NAME math_test_test_beta SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_beta.cpp )
cm_test(NAME math_test_test_bessel_airy_zeros SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_bessel_airy_zeros.cpp )
cm_test(NAME math_test_test_bernoulli_constants SOURCES ${CMAKE_CURRENT_BINARY_DIR}/test_bernoulli_constants.cpp SOURCES_PREFIX ${CURRENT_TEST_SOURCES_DIR})
cm_test(NAME math_test_test_beta_dist SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_beta_dist.cpp )
cm_test(NAME math_test_test_binomial_float SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_binomial.cpp )
target_compile_definitions(math_test_test_binomial_float PUBLIC TEST_FLOAT)
cm_test(NAME math_test_test_binomial_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_binomial.cpp )
target_compile_definitions(math_test_test_binomial_double PUBLIC TEST_DOUBLE)
cm_test(NAME math_test_test_binomial_long_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_binomial.cpp )
target_compile_definitions(math_test_test_binomial_long_double PUBLIC TEST_LDOUBLE)
cm_test(NAME math_test_test_binomial_real_concept0 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_binomial.cpp )
target_compile_definitions(math_test_test_binomial_real_concept0 PUBLIC TEST_ROUNDING=0)
cm_test(NAME math_test_test_binomial_real_concept1 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_binomial.cpp )
target_compile_definitions(math_test_test_binomial_real_concept1 PUBLIC TEST_ROUNDING=1)
cm_test(NAME math_test_test_binomial_real_concept2 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_binomial.cpp )
target_compile_definitions(math_test_test_binomial_real_concept2 PUBLIC TEST_ROUNDING=2)
cm_test(NAME math_test_test_binomial_real_concept3 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_binomial.cpp )
target_compile_definitions(math_test_test_binomial_real_concept3 PUBLIC TEST_ROUNDING=3)
cm_test(NAME math_test_test_binomial_real_concept4 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_binomial.cpp )
target_compile_definitions(math_test_test_binomial_real_concept4 PUBLIC TEST_ROUNDING=4)
cm_test(NAME math_test_test_binomial_real_concept5 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_binomial.cpp )
target_compile_definitions(math_test_test_binomial_real_concept5 PUBLIC TEST_ROUNDING=5)
cm_test(NAME math_test_test_binomial_real_concept6 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_binomial.cpp )
target_compile_definitions(math_test_test_binomial_real_concept6 PUBLIC TEST_ROUNDING=6)
cm_test(NAME math_test_test_binomial_coeff SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_binomial_coeff.cpp )
cm_test(NAME math_test_test_carlson_1 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_carlson.cpp )
target_compile_definitions(math_test_test_carlson_1 PUBLIC TEST1)
cm_test(NAME math_test_test_carlson_2 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_carlson.cpp )
target_compile_definitions(math_test_test_carlson_2 PUBLIC TEST2)
cm_test(NAME math_test_test_carlson_3 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_carlson.cpp )
target_compile_definitions(math_test_test_carlson_3 PUBLIC TEST3)
cm_test(NAME math_test_test_carlson_4 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_carlson.cpp )
target_compile_definitions(math_test_test_carlson_4 PUBLIC TEST4)
cm_test(NAME math_test_test_cauchy SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_cauchy.cpp )
cm_test(NAME math_test_test_cbrt SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_cbrt.cpp )
target_link_libraries(math_test_test_cbrt ${CMAKE_WORKSPACE_NAME}::test)
cm_test(NAME math_test_test_chi_squared SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_chi_squared.cpp )
cm_test(NAME math_test_test_classify SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_classify.cpp )
cm_test(NAME math_test_test_digamma SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_digamma.cpp )
cm_test(NAME math_test_test_dist_overloads SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_dist_overloads.cpp )
cm_test(NAME math_test_test_ellint_1 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ellint_1.cpp )
cm_test(NAME math_test_test_ellint_2 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ellint_2.cpp )
cm_test(NAME math_test_test_ellint_3 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ellint_3.cpp )
cm_test(NAME math_test_test_ellint_d SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ellint_d.cpp )
cm_test(NAME math_test_test_jacobi_zeta SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_jacobi_zeta.cpp )
cm_test(NAME math_test_test_heuman_lambda SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_heuman_lambda.cpp )
cm_test(NAME math_test_test_erf SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_erf.cpp )
cm_test(NAME math_test_test_error_handling SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_error_handling.cpp )
cm_test(NAME math_test_test_expint SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_expint.cpp )
cm_test(NAME math_test_test_exponential_dist SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_exponential_dist.cpp )
cm_test(NAME math_test_test_extreme_value SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_extreme_value.cpp )
cm_test(NAME math_test_test_factorials SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_factorials.cpp )
cm_test(NAME math_test_test_find_location SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_find_location.cpp )
cm_test(NAME math_test_test_find_scale SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_find_scale.cpp )
cm_test(NAME math_test_test_fisher_f SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_fisher_f.cpp )
cm_test(NAME math_test_test_gamma SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_gamma.cpp )
cm_test(NAME math_test_test_gamma_dist SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_gamma_dist.cpp )
cm_test(NAME math_test_test_geometric SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_geometric.cpp )
cm_test(NAME math_test_test_hankel SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_hankel.cpp )
cm_test(NAME math_test_test_hermite SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_hermite.cpp )
cm_test(NAME math_test_test_hyperexponential_dist SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_hyperexponential_dist.cpp )
cm_test(NAME math_test_test_hypergeometric_dist0 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_hypergeometric_dist.cpp )
target_compile_definitions(math_test_test_hypergeometric_dist0 PUBLIC TEST_QUANT=0)
cm_test(NAME math_test_test_hypergeometric_dist1 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_hypergeometric_dist.cpp )
target_compile_definitions(math_test_test_hypergeometric_dist1 PUBLIC TEST_QUANT=1)
cm_test(NAME math_test_test_hypergeometric_dist2 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_hypergeometric_dist.cpp )
target_compile_definitions(math_test_test_hypergeometric_dist2 PUBLIC TEST_QUANT=2)
cm_test(NAME math_test_test_hypergeometric_dist3 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_hypergeometric_dist.cpp )
target_compile_definitions(math_test_test_hypergeometric_dist3 PUBLIC TEST_QUANT=3)
cm_test(NAME math_test_test_hypergeometric_dist4 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_hypergeometric_dist.cpp )
target_compile_definitions(math_test_test_hypergeometric_dist4 PUBLIC TEST_QUANT=4)
cm_test(NAME math_test_test_hypergeometric_dist5 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_hypergeometric_dist.cpp )
target_compile_definitions(math_test_test_hypergeometric_dist5 PUBLIC TEST_QUANT=5)
cm_test(NAME math_test_test_ibeta_float SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta.cpp )
target_compile_definitions(math_test_test_ibeta_float PUBLIC TEST_FLOAT)
cm_test(NAME math_test_test_ibeta_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta.cpp )
target_compile_definitions(math_test_test_ibeta_double PUBLIC TEST_DOUBLE)
cm_test(NAME math_test_test_ibeta_long_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta.cpp )
target_compile_definitions(math_test_test_ibeta_long_double PUBLIC TEST_LDOUBLE)
cm_test(NAME math_test_test_ibeta_real_concept1 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta.cpp )
target_compile_definitions(math_test_test_ibeta_real_concept1 PUBLIC TEST_DATA=1)
cm_test(NAME math_test_test_ibeta_real_concept2 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta.cpp )
target_compile_definitions(math_test_test_ibeta_real_concept2 PUBLIC TEST_DATA=2)
cm_test(NAME math_test_test_ibeta_real_concept3 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta.cpp )
target_compile_definitions(math_test_test_ibeta_real_concept3 PUBLIC TEST_DATA=3)
cm_test(NAME math_test_test_ibeta_real_concept4 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta.cpp )
target_compile_definitions(math_test_test_ibeta_real_concept4 PUBLIC TEST_DATA=4)

cm_test(NAME math_test_test_ibeta_inv_float SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta_inv.cpp )
target_compile_definitions(math_test_test_ibeta_inv_float PUBLIC TEST_FLOAT)
cm_test(NAME math_test_test_ibeta_inv_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta_inv.cpp )
target_compile_definitions(math_test_test_ibeta_inv_double PUBLIC TEST_DOUBLE)
cm_test(NAME math_test_test_ibeta_inv_long_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta_inv.cpp )
target_compile_definitions(math_test_test_ibeta_inv_long_double PUBLIC TEST_LDOUBLE)
cm_test(NAME math_test_test_ibeta_inv_real_concept1 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta_inv.cpp )
target_compile_definitions(math_test_test_ibeta_inv_real_concept1 PUBLIC TEST_DATA=1)
cm_test(NAME math_test_test_ibeta_inv_real_concept2 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta_inv.cpp )
target_compile_definitions(math_test_test_ibeta_inv_real_concept2 PUBLIC TEST_DATA=2)
cm_test(NAME math_test_test_ibeta_inv_real_concept3 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta_inv.cpp )
target_compile_definitions(math_test_test_ibeta_inv_real_concept3 PUBLIC TEST_DATA=3)
cm_test(NAME math_test_test_ibeta_inv_real_concept4 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta_inv.cpp )
target_compile_definitions(math_test_test_ibeta_inv_real_concept4 PUBLIC TEST_DATA=4)
cm_test(NAME math_test_test_ibeta_inv_ab_float SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta_inv_ab.cpp )
target_compile_definitions(math_test_test_ibeta_inv_ab_float PUBLIC TEST_FLOAT)
cm_test(NAME math_test_test_ibeta_inv_ab_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta_inv_ab.cpp )
target_compile_definitions(math_test_test_ibeta_inv_ab_double PUBLIC TEST_DOUBLE)
cm_test(NAME math_test_test_ibeta_inv_ab_long_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta_inv_ab.cpp )
target_compile_definitions(math_test_test_ibeta_inv_ab_long_double PUBLIC TEST_LDOUBLE)
cm_test(NAME math_test_test_ibeta_inv_ab_real_concept1 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta_inv_ab.cpp )
target_compile_definitions(math_test_test_ibeta_inv_ab_real_concept1 PUBLIC TEST_DATA=1)
cm_test(NAME math_test_test_ibeta_inv_ab_real_concept2 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta_inv_ab.cpp )
target_compile_definitions(math_test_test_ibeta_inv_ab_real_concept2 PUBLIC TEST_DATA=2)
cm_test(NAME math_test_test_ibeta_inv_ab_real_concept3 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ibeta_inv_ab.cpp )
target_compile_definitions(math_test_test_ibeta_inv_ab_real_concept3 PUBLIC TEST_DATA=3)
cm_test(NAME math_test_test_igamma SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_igamma.cpp )
cm_test(NAME math_test_test_igamma_inv_float SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_igamma_inv.cpp )
target_compile_definitions(math_test_test_igamma_inv_float PUBLIC TEST_FLOAT)
cm_test(NAME math_test_test_igamma_inv_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_igamma_inv.cpp )
target_compile_definitions(math_test_test_igamma_inv_double PUBLIC TEST_DOUBLE)
cm_test(NAME math_test_test_igamma_inv_long_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_igamma_inv.cpp )
target_compile_definitions(math_test_test_igamma_inv_long_double PUBLIC TEST_LDOUBLE)
cm_test(NAME math_test_test_igamma_inv_real_concept SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_igamma_inv.cpp )
target_compile_definitions(math_test_test_igamma_inv_real_concept PUBLIC TEST_REAL_CONCEPT)
cm_test(NAME math_test_test_igamma_inva_float SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_igamma_inva.cpp )
target_compile_definitions(math_test_test_igamma_inva_float PUBLIC TEST_FLOAT)
cm_test(NAME math_test_test_igamma_inva_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_igamma_inva.cpp )
target_compile_definitions(math_test_test_igamma_inva_double PUBLIC TEST_DOUBLE)
cm_test(NAME math_test_test_igamma_inva_long_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_igamma_inva.cpp )
target_compile_definitions(math_test_test_igamma_inva_long_double PUBLIC TEST_LDOUBLE)
cm_test(NAME math_test_test_igamma_inva_real_concept SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_igamma_inva.cpp )
target_compile_definitions(math_test_test_igamma_inva_real_concept PUBLIC TEST_REAL_CONCEPT)
cm_test(NAME math_test_test_instantiate1 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_instantiate1.cpp ${CURRENT_TEST_SOURCES_DIR}/test_instantiate2.cpp )
cm_test(NAME math_test_test_inverse_chi_squared_distribution SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_inverse_chi_squared_distribution.cpp )
cm_test(NAME math_test_test_inverse_gamma_distribution SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_inverse_gamma_distribution.cpp )
cm_test(NAME math_test_test_inverse_gaussian SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_inverse_gaussian.cpp )

cm_test(NAME math_test_test_jacobi SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_jacobi.cpp )
cm_test(NAME math_test_test_laplace SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_laplace.cpp )
cm_test(NAME math_test_test_inv_hyp SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_inv_hyp.cpp )
cm_test(NAME math_test_test_laguerre SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_laguerre.cpp )
cm_test(NAME math_test_test_legendre SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_legendre.cpp )
cm_test(NAME math_test_test_ldouble_simple SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_ldouble_simple.cpp )
cm_test(NAME math_test_test_logistic_dist SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_logistic_dist.cpp )
cm_test(NAME math_test_test_lognormal SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_lognormal.cpp )
cm_test(NAME math_test_test_minima SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_minima.cpp )
cm_test(NAME math_test_test_negative_binomial_float SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_negative_binomial.cpp )
target_compile_definitions(math_test_test_negative_binomial_float PUBLIC TEST_FLOAT)
cm_test(NAME math_test_test_negative_binomial_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_negative_binomial.cpp )
target_compile_definitions(math_test_test_negative_binomial_double PUBLIC TEST_DOUBLE)
cm_test(NAME math_test_test_negative_binomial_long_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_negative_binomial.cpp )
target_compile_definitions(math_test_test_negative_binomial_long_double PUBLIC TEST_LDOUBLE)
cm_test(NAME math_test_test_negative_binomial_real_concept SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_negative_binomial.cpp )
target_compile_definitions(math_test_test_negative_binomial_real_concept PUBLIC TEST_REAL_CONCEPT)
cm_test(NAME math_test_test_next SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_next.cpp )
cm_test(NAME math_test_test_nc_chi_squared_float SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_nc_chi_squared.cpp )
target_compile_definitions(math_test_test_nc_chi_squared_float PUBLIC TEST_FLOAT)
cm_test(NAME math_test_test_nc_chi_squared_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_nc_chi_squared.cpp )
target_compile_definitions(math_test_test_nc_chi_squared_double PUBLIC TEST_DOUBLE)
cm_test(NAME math_test_test_nc_chi_squared_long_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_nc_chi_squared.cpp )
target_compile_definitions(math_test_test_nc_chi_squared_long_double PUBLIC TEST_LDOUBLE)
cm_test(NAME math_test_test_nc_chi_squared_real_concept SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_nc_chi_squared.cpp )
target_compile_definitions(math_test_test_nc_chi_squared_real_concept PUBLIC TEST_REAL_CONCEPT)
cm_test(NAME math_test_test_nc_beta_float SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_nc_beta.cpp )
target_compile_definitions(math_test_test_nc_beta_float PUBLIC TEST_FLOAT)
cm_test(NAME math_test_test_nc_beta_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_nc_beta.cpp )
target_compile_definitions(math_test_test_nc_beta_double PUBLIC TEST_DOUBLE)
cm_test(NAME math_test_test_nc_beta_long_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_nc_beta.cpp )
target_compile_definitions(math_test_test_nc_beta_long_double PUBLIC TEST_LDOUBLE)
cm_test(NAME math_test_test_nc_beta_real_concept1 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_nc_beta.cpp )
target_compile_definitions(math_test_test_nc_beta_real_concept1 PUBLIC TEST_DATA=1)
cm_test(NAME math_test_test_nc_beta_real_concept2 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_nc_beta.cpp )
target_compile_definitions(math_test_test_nc_beta_real_concept2 PUBLIC TEST_DATA=2)
cm_test(NAME math_test_test_nc_f SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_nc_f.cpp )
cm_test(NAME math_test_test_nc_t_float SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_nc_t.cpp )
target_compile_definitions(math_test_test_nc_t_float PUBLIC TEST_FLOAT)
cm_test(NAME math_test_test_nc_t_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_nc_t.cpp )
target_compile_definitions(math_test_test_nc_t_double PUBLIC TEST_DOUBLE)
cm_test(NAME math_test_test_nc_t_long_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_nc_t.cpp )
target_compile_definitions(math_test_test_nc_t_long_double PUBLIC TEST_LDOUBLE)
cm_test(NAME math_test_test_nc_t_real_concept SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_nc_t.cpp )
target_compile_definitions(math_test_test_nc_t_real_concept PUBLIC TEST_REAL_CONCEPT)
cm_test(NAME math_test_test_normal SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_normal.cpp )
cm_test(NAME math_test_test_owens_t SOURCES ${CMAKE_CURRENT_BINARY_DIR}/test_owens_t.cpp SOURCES_PREFIX ${CURRENT_TEST_SOURCES_DIR})
cm_test(NAME math_test_test_pareto SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_pareto.cpp )
cm_test(NAME math_test_test_polygamma SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_polygamma.cpp )
cm_test(NAME math_test_test_trigamma SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_trigamma.cpp )
cm_test(NAME math_test_test_poisson_float SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_poisson.cpp )
target_compile_definitions(math_test_test_poisson_float PUBLIC TEST_FLOAT)
cm_test(NAME math_test_test_poisson_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_poisson.cpp )
target_compile_definitions(math_test_test_poisson_double PUBLIC TEST_DOUBLE)
cm_test(NAME math_test_test_poisson_long_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_poisson.cpp )
target_compile_definitions(math_test_test_poisson_long_double PUBLIC TEST_LDOUBLE)
cm_test(NAME math_test_test_poisson_real_concept SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_poisson.cpp )
target_compile_definitions(math_test_test_poisson_real_concept PUBLIC TEST_REAL_CONCEPT)
cm_test(NAME math_test_test_rayleigh SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_rayleigh.cpp )

# TODO: fix test.
#cm_test(NAME math_test_test_rationals SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_rationals.cpp
         #test_rational_instances/test_rational_double1.cpp
         #test_rational_instances/test_rational_double2.cpp
         #test_rational_instances/test_rational_double3.cpp
         #test_rational_instances/test_rational_double4.cpp
         #test_rational_instances/test_rational_double5.cpp
         #test_rational_instances/test_rational_float1.cpp
         #test_rational_instances/test_rational_float2.cpp
         #test_rational_instances/test_rational_float3.cpp
         #test_rational_instances/test_rational_float4.cpp
         #test_rational_instances/test_rational_ldouble1.cpp
         #test_rational_instances/test_rational_ldouble2.cpp
         #test_rational_instances/test_rational_ldouble3.cpp
         #test_rational_instances/test_rational_ldouble4.cpp
         #test_rational_instances/test_rational_ldouble5.cpp
         #test_rational_instances/test_rational_real_concept1.cpp
         #test_rational_instances/test_rational_real_concept2.cpp
         #test_rational_instances/test_rational_real_concept3.cpp
         #test_rational_instances/test_rational_real_concept4.cpp
         #test_rational_instances/test_rational_real_concept5.cpp
         #)

cm_test(NAME math_test_test_real_concept SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_real_concept.cpp )
cm_test(NAME math_test_test_remez SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_remez.cpp )
cm_test(NAME math_test_test_roots SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_roots.cpp )
cm_test(NAME math_test_test_round SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_round.cpp )
cm_test(NAME math_test_test_spherical_harmonic SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_spherical_harmonic.cpp )
cm_test(NAME math_test_test_students_t SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_students_t.cpp )
cm_test(NAME math_test_test_sign SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_sign.cpp )
cm_test(NAME math_test_test_skew_normal SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_skew_normal.cpp )
cm_test(NAME math_test_test_tgamma_ratio SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_tgamma_ratio.cpp )
cm_test(NAME math_test_test_toms748_solve SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_toms748_solve.cpp )
cm_test(NAME math_test_test_triangular SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_triangular.cpp )
cm_test(NAME math_test_test_trig SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_trig.cpp )
cm_test(NAME math_test_test_uniform SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_uniform.cpp )
cm_test(NAME math_test_test_weibull SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_weibull.cpp )
cm_test(NAME math_test_test_zeta SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_zeta.cpp )

cm_test(NAME math_test_test_policy SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_policy.cpp )
cm_test(NAME math_test_test_policy_2 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_policy_2.cpp )
cm_test(NAME math_test_test_policy_3 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_policy_3.cpp )
cm_test(NAME math_test_test_policy_4 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_policy_4.cpp )
cm_test(NAME math_test_test_policy_5 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_policy_5.cpp )
cm_test(NAME math_test_test_policy_6 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_policy_6.cpp )
cm_test(NAME math_test_test_policy_7 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_policy_7.cpp )
cm_test(NAME math_test_test_policy_8 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_policy_8.cpp )
cm_test(NAME math_test_test_policy_sf SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_policy_sf.cpp )

cm_test(NAME math_test_test_tr1 SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_tr1.cpp )
target_link_libraries(math_test_test_tr1 ${CMAKE_WORKSPACE_NAME}_math_tr1 ${CMAKE_WORKSPACE_NAME}_math_tr1f ${CMAKE_WORKSPACE_NAME}_math_c99 ${CMAKE_WORKSPACE_NAME}_math_c99f)

if(HAVE_SIZEOF_LONG_DOUBLE)
    cm_test(NAME math_test_test_tr1_long_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_tr1.cpp )
    target_link_libraries(math_test_test_tr1_long_double ${CMAKE_WORKSPACE_NAME}_math_tr1l ${CMAKE_WORKSPACE_NAME}_math_c99l)
    target_compile_definitions(math_test_test_tr1_long_double PUBLIC TEST_LD=1)
endif()

cm_test(NAME math_test_test_tr1_c SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_tr1.c )
target_link_libraries(math_test_test_tr1_c ${CMAKE_WORKSPACE_NAME}_math_tr1 ${CMAKE_WORKSPACE_NAME}_math_tr1f ${CMAKE_WORKSPACE_NAME}_math_c99 ${CMAKE_WORKSPACE_NAME}_math_c99f)

if(HAVE_SIZEOF_LONG_DOUBLE)
    cm_test(NAME math_test_test_tr1_c_long_double SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_tr1.c )
    target_link_libraries(math_test_test_tr1_c_long_double ${CMAKE_WORKSPACE_NAME}_math_tr1l ${CMAKE_WORKSPACE_NAME}_math_c99l)
    target_compile_definitions(math_test_test_tr1_c_long_double PUBLIC TEST_LD=1)

    cm_test(NAME math_test_test_long_double_support SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_long_double_support.cpp )
endif()

add_library(compile_test_main STATIC ${CURRENT_TEST_SOURCES_DIR}/compile_test/main.cpp)
cm_mark_as_test(compile_test_main)

cm_test(NAME math_test_compile_test_compl_abs_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/compl_abs_incl_test.cpp )
target_link_libraries(math_test_compile_test_compl_abs_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_compl_acos_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/compl_acos_incl_test.cpp )
target_link_libraries(math_test_compile_test_compl_acos_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_compl_acosh_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/compl_acosh_incl_test.cpp )
target_link_libraries(math_test_compile_test_compl_acosh_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_compl_asin_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/compl_asin_incl_test.cpp )
target_link_libraries(math_test_compile_test_compl_asin_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_compl_asinh_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/compl_asinh_incl_test.cpp )
target_link_libraries(math_test_compile_test_compl_asinh_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_compl_atan_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/compl_atan_incl_test.cpp )
target_link_libraries(math_test_compile_test_compl_atan_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_compl_atanh_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/compl_atanh_incl_test.cpp )
target_link_libraries(math_test_compile_test_compl_atanh_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_bernoulli_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_bernoulli_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_bernoulli_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_beta_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_beta_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_beta_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_binomial_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_binomial_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_binomial_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_cauchy_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_cauchy_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_cauchy_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_chi_squared_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_chi_squared_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_chi_squared_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_complement_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_complement_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_complement_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_exponential_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_exponential_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_exponential_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_extreme_val_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_extreme_val_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_extreme_val_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_find_location_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_find_location_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_find_location_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_find_scale_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_find_scale_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_find_scale_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_fisher_f_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_fisher_f_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_fisher_f_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_gamma_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_gamma_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_gamma_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_inv_gamma_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_inv_gamma_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_inv_gamma_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_inv_chi_sq_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_inv_chi_sq_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_inv_chi_sq_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_hyperexponential_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_hyperexponential_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_hyperexponential_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_hypergeo_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_hypergeo_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_hypergeo_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_laplace_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_laplace_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_laplace_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_logistic_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_logistic_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_logistic_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_lognormal_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_lognormal_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_lognormal_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_neg_binom_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_neg_binom_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_neg_binom_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_nc_chi_squ_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_nc_chi_squ_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_nc_chi_squ_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_nc_beta_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_nc_beta_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_nc_beta_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_nc_f_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_nc_f_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_nc_f_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_nc_t_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_nc_t_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_nc_t_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_normal_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_normal_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_normal_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_poisson_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_poisson_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_poisson_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_students_t_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_students_t_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_students_t_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_triangular_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_triangular_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_triangular_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_uniform_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_uniform_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_uniform_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_weibull_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_weibull_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_weibull_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_distribution_concept_check SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/distribution_concept_check.cpp )
target_link_libraries(math_test_compile_test_distribution_concept_check compile_test_main)
cm_test(NAME math_test_compile_test_sf_beta_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_beta_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_beta_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_bernoulli_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_bernoulli_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_bernoulli_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_bessel_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_bessel_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_bessel_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_bessel_deriv_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_bessel_deriv_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_bessel_deriv_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_binomial_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_binomial_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_binomial_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_cbrt_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_cbrt_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_cbrt_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_cos_pi_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_cos_pi_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_cos_pi_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_digamma_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_digamma_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_digamma_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_polygamma_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_polygamma_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_polygamma_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_ellint_1_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_ellint_1_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_ellint_1_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_ellint_2_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_ellint_2_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_ellint_2_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_ellint_3_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_ellint_3_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_ellint_3_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_ellint_d_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_ellint_d_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_ellint_d_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_jacobi_zeta_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_jacobi_zeta_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_jacobi_zeta_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_heuman_lambda_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_heuman_lambda_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_heuman_lambda_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_ellint_rc_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_ellint_rc_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_ellint_rc_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_ellint_rd_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_ellint_rd_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_ellint_rd_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_ellint_rf_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_ellint_rf_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_ellint_rf_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_ellint_rj_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_ellint_rj_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_ellint_rj_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_ellint_rg_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_ellint_rg_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_ellint_rg_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_erf_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_erf_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_erf_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_expint_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_expint_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_expint_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_expm1_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_expm1_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_expm1_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_factorials_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_factorials_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_factorials_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_fpclassify_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_fpclassify_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_fpclassify_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_gamma_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_gamma_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_gamma_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_hermite_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_hermite_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_hermite_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_hypot_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_hypot_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_hypot_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_laguerre_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_laguerre_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_laguerre_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_lanczos_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_lanczos_incl_test.cpp COMPILE_ONLY )
target_link_libraries(math_test_compile_test_sf_lanczos_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_legendre_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_legendre_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_legendre_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_log1p_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_log1p_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_log1p_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_math_fwd_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_math_fwd_incl_test.cpp COMPILE_ONLY )
target_link_libraries(math_test_compile_test_sf_math_fwd_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_modf_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_modf_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_modf_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_next_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_next_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_next_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_powm1_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_powm1_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_powm1_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_round_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_round_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_round_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_sign_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_sign_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_sign_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_sin_pi_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_sin_pi_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_sin_pi_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_sinc_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_sinc_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_sinc_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_sinhc_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_sinhc_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_sinhc_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_sph_harm_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_sph_harm_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_sph_harm_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_sqrt1pm1_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_sqrt1pm1_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_sqrt1pm1_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_trunc_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_trunc_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_trunc_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_zeta_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_zeta_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_zeta_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_std_real_concept_check SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/std_real_concept_check.cpp )
target_link_libraries(math_test_compile_test_std_real_concept_check compile_test_main)

if ((HAS_FLOAT128) AND (HAS_INTEL_QUAD))
    cm_test(NAME math_test_compile_test_cstdfloat_concept_check_1 SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/cstdfloat_concept_check_1.cpp )
    target_link_libraries(math_test_compile_test_cstdfloat_concept_check_1 compile_test_main)
endif()

if(NOT CMAKE_CXX_COMPILER_ID MATCHES "GNU")
    cm_test(NAME math_test_compile_test_cstdfloat_concept_check_2 SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/cstdfloat_concept_check_2.cpp )
    cm_test(NAME math_test_compile_test_cstdfloat_concept_check_3 SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/cstdfloat_concept_check_3.cpp )
    cm_test(NAME math_test_compile_test_cstdfloat_concept_check_4 SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/cstdfloat_concept_check_4.cpp )
endif()

cm_test(NAME math_test_compile_test_sf_airy_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_airy_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_airy_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_hankel_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_hankel_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_hankel_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_jacobi_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_jacobi_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_jacobi_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_sf_owens_t_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/sf_owens_t_incl_test.cpp )
target_link_libraries(math_test_compile_test_sf_owens_t_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_dist_skew_norm_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/dist_skew_norm_incl_test.cpp )
target_link_libraries(math_test_compile_test_dist_skew_norm_incl_test compile_test_main)
cm_test(NAME math_test_compile_test_constants_incl_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/constants_incl_test.cpp )
target_link_libraries(math_test_compile_test_constants_incl_test compile_test_main)

cm_test(NAME math_test_compile_test_test_traits SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/test_traits.cpp COMPILE_ONLY )
cm_test(NAME math_test_compile_test_tools_config_inc_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/tools_config_inc_test.cpp COMPILE_ONLY )
cm_test(NAME math_test_compile_test_tools_fraction_inc_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/tools_fraction_inc_test.cpp COMPILE_ONLY )
cm_test(NAME math_test_compile_test_tools_minima_inc_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/tools_minima_inc_test.cpp COMPILE_ONLY )
cm_test(NAME math_test_compile_test_tools_polynomial_inc_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/tools_polynomial_inc_test.cpp COMPILE_ONLY )
cm_test(NAME math_test_compile_test_tools_precision_inc_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/tools_precision_inc_test.cpp COMPILE_ONLY )
cm_test(NAME math_test_compile_test_tools_rational_inc_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/tools_rational_inc_test.cpp COMPILE_ONLY )
cm_test(NAME math_test_compile_test_tools_real_cast_inc_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/tools_real_cast_inc_test.cpp COMPILE_ONLY )
cm_test(NAME math_test_compile_test_tools_remez_inc_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/tools_remez_inc_test.cpp COMPILE_ONLY )
cm_test(NAME math_test_compile_test_tools_roots_inc_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/tools_roots_inc_test.cpp COMPILE_ONLY )
cm_test(NAME math_test_compile_test_tools_series_inc_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/tools_series_inc_test.cpp COMPILE_ONLY )
cm_test(NAME math_test_compile_test_tools_solve_inc_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/tools_solve_inc_test.cpp COMPILE_ONLY )
cm_test(NAME math_test_compile_test_tools_stats_inc_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/tools_stats_inc_test.cpp COMPILE_ONLY )
cm_test(NAME math_test_compile_test_tools_test_data_inc_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/tools_test_data_inc_test.cpp COMPILE_ONLY )
cm_test(NAME math_test_compile_test_tools_test_inc_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/tools_test_inc_test.cpp COMPILE_ONLY )
cm_test(NAME math_test_compile_test_tools_toms748_inc_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/compile_test/tools_toms748_inc_test.cpp COMPILE_ONLY )

cm_test(NAME math_test___test_common_factor_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/../test/common_factor_test.cpp )

cm_test(NAME math_test___octonion_octonion_test SOURCES ${CMAKE_CURRENT_BINARY_DIR}/../octonion/octonion_test.cpp SOURCES_PREFIX ${CURRENT_TEST_SOURCES_DIR})

cm_test(NAME math_test___quaternion_quaternion_test SOURCES ${CMAKE_CURRENT_BINARY_DIR}/../quaternion/quaternion_test.cpp SOURCES_PREFIX ${CURRENT_TEST_SOURCES_DIR})
cm_test(NAME math_test___quaternion_quaternion_mult_incl_test SOURCES ${CMAKE_CURRENT_BINARY_DIR}/../quaternion/quaternion_mult_incl_test.cpp ${CURRENT_TEST_SOURCES_DIR}/../quaternion/quaternion_mi1.cpp ${CURRENT_TEST_SOURCES_DIR}/../quaternion/quaternion_mi2.cpp SOURCES_PREFIX ${CURRENT_TEST_SOURCES_DIR})

cm_test(NAME math_test_test_legacy_nonfinite SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_legacy_nonfinite.cpp )
cm_test(NAME math_test_test_basic_nonfinite SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_basic_nonfinite.cpp )
cm_test(NAME math_test_test_lexical_cast SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_lexical_cast.cpp )
cm_test(NAME math_test_test_nonfinite_trap SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_nonfinite_trap.cpp )
set_target_properties(math_test_test_nonfinite_trap PROPERTIES CXX_EXCEPTIONS off)
cm_test(NAME math_test_test_signed_zero SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_signed_zero.cpp )

cm_test(NAME math_test_complex_test SOURCES ${CURRENT_TEST_SOURCES_DIR}/complex_test.cpp )

cm_test(NAME math_test_multiprc_concept_check_1 SOURCES ${CURRENT_TEST_SOURCES_DIR}/multiprc_concept_check_1.cpp COMPILE_ONLY )
set_target_properties(math_test_multiprc_concept_check_1 PROPERTIES CXX_EXCEPTIONS off)
cm_test(NAME math_test_multiprc_concept_check_2 SOURCES ${CURRENT_TEST_SOURCES_DIR}/multiprc_concept_check_2.cpp COMPILE_ONLY )
set_target_properties(math_test_multiprc_concept_check_2 PROPERTIES CXX_EXCEPTIONS off)
cm_test(NAME math_test_multiprc_concept_check_3 SOURCES ${CURRENT_TEST_SOURCES_DIR}/multiprc_concept_check_3.cpp COMPILE_ONLY )
set_target_properties(math_test_multiprc_concept_check_3 PROPERTIES CXX_EXCEPTIONS off)
cm_test(NAME math_test_multiprc_concept_check_4 SOURCES ${CURRENT_TEST_SOURCES_DIR}/multiprc_concept_check_4.cpp COMPILE_ONLY )
set_target_properties(math_test_multiprc_concept_check_4 PROPERTIES CXX_EXCEPTIONS off)

# TODO: Check the dependencies of these tests
if (HAS_NTL_RR)
    cm_test(NAME math_test_ntl_concept_check SOURCES ${CURRENT_TEST_SOURCES_DIR}/ntl_concept_check.cpp COMPILE_ONLY )
endif()

if (HAS_MPFR_CLASS)
    cm_test(NAME math_test_mpfr_concept_check SOURCES ${CURRENT_TEST_SOURCES_DIR}/mpfr_concept_check.cpp COMPILE_ONLY )
endif()

if (HAS_MPREAL)
    cm_test(NAME math_test_mpreal_concept_check SOURCES ${CURRENT_TEST_SOURCES_DIR}/mpreal_concept_check.cpp COMPILE_ONLY )
endif()

if (HAS_E_FLOAT)
    cm_test(NAME math_test_e_float_concept_check SOURCES ${CURRENT_TEST_SOURCES_DIR}/e_float_concept_check.cpp COMPILE_ONLY )
endif()

if (HAS_GMPXX)
    cm_test(NAME math_test_test_common_factor_gmpxx SOURCES ${CURRENT_TEST_SOURCES_DIR}/test_common_factor_gmpxx.cpp COMPILE_ONLY )
    set_target_properties(math_test_test_common_factor_gmpxx PROPERTIES CXX_EXCEPTIONS off)
endif()

# Temporary tests for support of max_digits10
# run ztest_max_digits10.cpp ;
# run zztest_max_digits10.cpp ;
#  Removed as inexplicably failing for VS12 on teeks99 but OK locally.

file(GLOB FLOAT_TEST ${CURRENT_TEST_SOURCES_DIR}/float128/*.cpp)
foreach(FILE ${FLOAT_TEST})
    get_filename_component(NAME ${FILE} NAME_WE)
    if ((HAS_INTEL_QUAD) AND (HAS_FLOAT128) AND (HAS_128BIT_FLOATMAX_T))
        cm_test(NAME math_test_float128_${NAME} SOURCES ${CURRENT_TEST_SOURCES_DIR}/float128/${NAME}.cpp )
        target_compile_definitions(math_test_float128_${NAME} PRIVATE -DBOOST_ALL_NO_LIB -DBOOST_MATH_USE_FLOAT128)
    endif()
endforeach()

include_directories(${CURRENT_TEST_SOURCES_DIR}/../octonion)
include_directories(${CURRENT_TEST_SOURCES_DIR}/../quaternion)
include_directories(${CURRENT_TEST_SOURCES_DIR})