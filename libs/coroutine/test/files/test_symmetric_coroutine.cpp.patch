6c6
< 
---
> #define BOOST_TEST_MAIN
27c27
< #include <boost/coroutine/symmetric_coroutine.hpp>
---
> #include <boost/coroutine/symmetric_coroutine_patched.hpp>
44c44
<         i( 0)
---
>             i( 0)
48c48
<         i( i_)
---
>             i( i_)
56c56
<     Y() 
---
>     Y()
59c59
<     ~Y() 
---
>     ~Y()
62c62
<    
---
> 
89,92c89,92
<         B(),
<         count( 0),
<         call(),
<         yield( & yield_)
---
>             B(),
>             count( 0),
>             call(),
>             yield( & yield_)
118c118
<         d( 0)
---
>             d( 0)
128c128
<         state( false)
---
>             state( false)
132c132
<         state( true)
---
>             state( true)
145c145
<     BOOST_MOVABLE_BUT_NOT_COPYABLE( moveable)
---
> BOOST_MOVABLE_BUT_NOT_COPYABLE( moveable)
151c151
<         state( false)
---
>             state( false)
155c155
<         state( true)
---
>             state( true)
159c159
<         state( false)
---
>             state( false)
263c263
<           int offset)
---
>            int offset)
332c332
<         boost::bind( f151, _1, 3) );
---
>             boost::bind( f151, _1, 3) );
335c335
<         boost::bind( f15, _1, 2, boost::ref( coro3) ) );
---
>             boost::bind( f15, _1, 2, boost::ref( coro3) ) );
338c338
<         boost::bind( f15, _1, 1, boost::ref( coro2) ) );
---
>             boost::bind( f15, _1, 1, boost::ref( coro2) ) );
415,417c415,417
<             coro::attributes(
<                 coro::stack_allocator::traits_type::default_size(),
<                 coro::no_stack_unwind) );
---
>                                                            coro::attributes(
>                                                                    coro::stack_allocator::traits_type::default_size(),
>                                                                    coro::no_stack_unwind) );
582c582,634
< boost::unit_test::test_suite * init_unit_test_suite( int, char* [])
---
> BOOST_AUTO_TEST_SUITE(boost_coroutine_symmetric_coroutine_test_suite)
> 
> BOOST_AUTO_TEST_CASE(test_move_case)
> {
>     test_move();
> }
> 
> BOOST_AUTO_TEST_CASE(test_complete_case)
> {
>     test_complete();
> }
> 
> BOOST_AUTO_TEST_CASE(test_yield_case)
> {
>     test_yield();
> }
> 
> BOOST_AUTO_TEST_CASE(test_pass_value_case)
> {
>     test_pass_value();
> }
> 
> BOOST_AUTO_TEST_CASE(test_pass_reference_case)
> {
>     test_pass_reference();
> }
> 
> BOOST_AUTO_TEST_CASE(test_pass_pointer_case)
> {
>     test_pass_pointer();
> }
> 
> BOOST_AUTO_TEST_CASE(test_termination_case)
> {
>     test_termination();
> }
> 
> BOOST_AUTO_TEST_CASE(test_unwind_case)
> {
>     test_unwind();
> }
> 
> BOOST_AUTO_TEST_CASE(test_no_unwind_case)
> {
>     test_no_unwind();
> }
> 
> BOOST_AUTO_TEST_CASE(test_yield_to_void_case)
> {
>     test_yield_to_void();
> }
> 
> BOOST_AUTO_TEST_CASE(test_yield_to_int_case)
584,585c636,637
<     boost::unit_test::test_suite * test =
<         BOOST_TEST_SUITE("Boost.coroutine: symmetric coroutine test suite");
---
>     test_yield_to_int();
> }
587,602c639,642
<     test->add( BOOST_TEST_CASE( & test_move) );
<     test->add( BOOST_TEST_CASE( & test_complete) );
<     test->add( BOOST_TEST_CASE( & test_yield) );
<     test->add( BOOST_TEST_CASE( & test_pass_value) );
<     test->add( BOOST_TEST_CASE( & test_pass_reference) );
<     test->add( BOOST_TEST_CASE( & test_pass_pointer) );
<     test->add( BOOST_TEST_CASE( & test_termination) );
<     test->add( BOOST_TEST_CASE( & test_unwind) );
<     test->add( BOOST_TEST_CASE( & test_no_unwind) );
<     test->add( BOOST_TEST_CASE( & test_yield_to_void) );
<     test->add( BOOST_TEST_CASE( & test_yield_to_int) );
<     test->add( BOOST_TEST_CASE( & test_yield_to_ref) );
<     test->add( BOOST_TEST_CASE( & test_yield_to_different) );
<     test->add( BOOST_TEST_CASE( & test_yield_to_different) );
<     test->add( BOOST_TEST_CASE( & test_move_coro) );
<     test->add( BOOST_TEST_CASE( & test_vptr) );
---
> BOOST_AUTO_TEST_CASE(test_yield_to_ref_case)
> {
>     test_yield_to_ref();
> }
604c644,646
<     return test;
---
> BOOST_AUTO_TEST_CASE(test_yield_to_different_case)
> {
>     test_yield_to_different();
605a648,659
> 
> BOOST_AUTO_TEST_CASE(test_move_coro_case)
> {
>     test_move_coro();
> }
> 
> BOOST_AUTO_TEST_CASE(test_vptr_case)
> {
>     test_vptr();
> }
> 
> BOOST_AUTO_TEST_SUITE_END()
\ No newline at end of file
