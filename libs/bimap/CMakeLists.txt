cmake_minimum_required(VERSION 3.5)
project(${CMAKE_WORKSPACE_NAME}_bimap)

find_package(BCM)
include(BCMDeploy)
include(BCMSetupVersion)

find_package(${CMAKE_WORKSPACE_NAME}_core)
find_package(${CMAKE_WORKSPACE_NAME}_static_assert)
find_package(${CMAKE_WORKSPACE_NAME}_iterator)
find_package(${CMAKE_WORKSPACE_NAME}_property_map)
find_package(${CMAKE_WORKSPACE_NAME}_mpl)
find_package(${CMAKE_WORKSPACE_NAME}_multi_index)
find_package(${CMAKE_WORKSPACE_NAME}_functional)
find_package(${CMAKE_WORKSPACE_NAME}_type_traits)
find_package(${CMAKE_WORKSPACE_NAME}_concept_check)
find_package(${CMAKE_WORKSPACE_NAME}_preprocessor)
find_package(${CMAKE_WORKSPACE_NAME}_serialization)
find_package(${CMAKE_WORKSPACE_NAME}_utility)
find_package(${CMAKE_WORKSPACE_NAME}_config)
find_package(${CMAKE_WORKSPACE_NAME}_throw_exception)
find_package(${CMAKE_WORKSPACE_NAME}_lambda)

bcm_setup_version(VERSION 1.58.0)

add_library(${CMAKE_WORKSPACE_NAME}_bimap INTERFACE)
set_property(TARGET ${CMAKE_WORKSPACE_NAME}_bimap PROPERTY EXPORT_NAME bimap)

target_link_libraries(${CMAKE_WORKSPACE_NAME}_bimap INTERFACE boost::core)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_bimap INTERFACE boost::static_assert)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_bimap INTERFACE boost::iterator)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_bimap INTERFACE boost::property_map)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_bimap INTERFACE boost::mpl)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_bimap INTERFACE boost::multi_index)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_bimap INTERFACE boost::functional)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_bimap INTERFACE boost::type_traits)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_bimap INTERFACE boost::concept_check)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_bimap INTERFACE boost::preprocessor)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_bimap INTERFACE boost::serialization)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_bimap INTERFACE boost::utility)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_bimap INTERFACE boost::config)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_bimap INTERFACE boost::throw_exception)
target_link_libraries(${CMAKE_WORKSPACE_NAME}_bimap INTERFACE boost::lambda)


bcm_deploy(TARGETS ${CMAKE_WORKSPACE_NAME}_bimap INCLUDE include NAMESPACE ${CMAKE_WORKSPACE_NAME}::)

add_subdirectory(test)
