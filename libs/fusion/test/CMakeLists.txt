include(BCMTest)

find_package(${CMAKE_WORKSPACE_NAME}_assert)
find_package(${CMAKE_WORKSPACE_NAME}_array)
find_package(${CMAKE_WORKSPACE_NAME}_lambda)

cm_test_link_libraries(${CMAKE_WORKSPACE_NAME}_fusion
                        boost::assert
                        boost::array
                        boost::lambda
                        )

##==============================================================================
#    Copyright (c) 2003-2006 Joel de Guzman
#    Copyright (c) 2013 Mateusz Loskot
#
#   Use, modification and distribution is subject to the Boost Software
#   License, Version 1.0. (See accompanying file LICENSE_1_0.txt or copy at
#   http://www.boost.org/LICENSE_1_0.txt)
#==============================================================================
# bring in rules for testing


cm_test(NAME fusion_test_algorithm_all SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/all.cpp)
cm_test(NAME fusion_test_algorithm_any SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/any.cpp)
cm_test(NAME fusion_test_algorithm_clear SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/clear.cpp)
cm_test(NAME fusion_test_algorithm_copy SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/copy.cpp)
cm_test(NAME fusion_test_algorithm_count SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/count.cpp)
cm_test(NAME fusion_test_algorithm_count_if SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/count_if.cpp)
cm_test(NAME fusion_test_algorithm_erase SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/erase.cpp)
cm_test(NAME fusion_test_algorithm_erase_key SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/erase_key.cpp)
cm_test(NAME fusion_test_algorithm_filter SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/filter.cpp)
cm_test(NAME fusion_test_algorithm_filter_if SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/filter_if.cpp)
cm_test(NAME fusion_test_algorithm_find SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/find.cpp)
cm_test(NAME fusion_test_algorithm_find_if SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/find_if.cpp)
cm_test(NAME fusion_test_algorithm_fold SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/fold.cpp)
cm_test(NAME fusion_test_algorithm_for_each SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/for_each.cpp)
cm_test(NAME fusion_test_algorithm_insert SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/insert.cpp)
cm_test(NAME fusion_test_algorithm_insert_range SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/insert_range.cpp)
cm_test(NAME fusion_test_algorithm_iter_fold SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/iter_fold.cpp)
cm_test(NAME fusion_test_algorithm_move SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/move.cpp)
cm_test(NAME fusion_test_algorithm_none SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/none.cpp)
cm_test(NAME fusion_test_algorithm_pop_back SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/pop_back.cpp)
cm_test(NAME fusion_test_algorithm_pop_front SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/pop_front.cpp)
cm_test(NAME fusion_test_algorithm_push_back SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/push_back.cpp)
cm_test(NAME fusion_test_algorithm_push_front SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/push_front.cpp)
cm_test(NAME fusion_test_algorithm_remove SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/remove.cpp)
cm_test(NAME fusion_test_algorithm_remove_if SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/remove_if.cpp)
cm_test(NAME fusion_test_algorithm_replace SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/replace.cpp)
cm_test(NAME fusion_test_algorithm_replace_if SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/replace_if.cpp)
cm_test(NAME fusion_test_algorithm_reverse_fold SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/reverse_fold.cpp)
cm_test(NAME fusion_test_algorithm_reverse_iter_fold SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/reverse_iter_fold.cpp)
cm_test(NAME fusion_test_algorithm_reverse SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/reverse.cpp)
cm_test(NAME fusion_test_algorithm_segmented_for_each SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/segmented_for_each.cpp)
cm_test(NAME fusion_test_algorithm_segmented_find SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/segmented_find.cpp)
cm_test(NAME fusion_test_algorithm_segmented_find_if SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/segmented_find_if.cpp)
cm_test(NAME fusion_test_algorithm_segmented_fold SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/segmented_fold.cpp)
cm_test(NAME fusion_test_algorithm_transform SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/transform.cpp)
cm_test(NAME fusion_test_algorithm_join SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/join.cpp)
cm_test(NAME fusion_test_algorithm_zip SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/zip.cpp)
cm_test(NAME fusion_test_algorithm_zip2 SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/zip2.cpp)
cm_test(NAME fusion_test_algorithm_zip_ignore SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/zip_ignore.cpp)
cm_test(NAME fusion_test_algorithm_flatten SOURCES ${CURRENT_TEST_SOURCES_DIR}/algorithm/flatten.cpp)

cm_test(NAME fusion_test_sequence_as_deque SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/as_deque.cpp)
cm_test(NAME fusion_test_sequence_as_list SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/as_list.cpp)
cm_test(NAME fusion_test_sequence_as_map SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/as_map.cpp)
cm_test(NAME fusion_test_sequence_as_map_assoc SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/as_map_assoc.cpp)
cm_test(NAME fusion_test_sequence_as_set SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/as_set.cpp)
cm_test(NAME fusion_test_sequence_as_vector SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/as_vector.cpp)
cm_test(NAME fusion_test_sequence_${CMAKE_WORKSPACE_NAME}_tuple SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/${CMAKE_WORKSPACE_NAME}_tuple.cpp)
cm_test(NAME fusion_test_sequence_${CMAKE_WORKSPACE_NAME}_tuple_iterator SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/${CMAKE_WORKSPACE_NAME}_tuple_iterator.cpp)
cm_test(NAME fusion_test_sequence_cons SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/cons.cpp)
# cm_test(NAME fusion_test_sequence_convert_${CMAKE_WORKSPACE_NAME}_tuple SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/convert_${CMAKE_WORKSPACE_NAME}_tuple.cpp)
# cm_test(NAME fusion_test_sequence_convert_deque SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/convert_deque.cpp)
# cm_test(NAME fusion_test_sequence_convert_list SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/convert_list.cpp)
# cm_test(NAME fusion_test_sequence_convert_std_pair SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/convert_std_pair.cpp)
# cm_test(NAME fusion_test_sequence_convert_std_tuple SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/convert_std_tuple.cpp)
# cm_test(NAME fusion_test_sequence_convert_vector SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/convert_vector.cpp)
cm_test(NAME fusion_test_sequence_filter_view SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/filter_view.cpp)
cm_test(NAME fusion_test_sequence_hash SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/hash.cpp)
cm_test(NAME fusion_test_sequence_io SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/io.cpp)
cm_test(NAME fusion_test_sequence_iterator_range SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/iterator_range.cpp)
cm_test(NAME fusion_test_sequence_joint_view SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/joint_view.cpp)
cm_test(NAME fusion_test_sequence_list_comparison SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/list_comparison.cpp)
cm_test(NAME fusion_test_sequence_list_construction SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/list_construction.cpp)
cm_test(NAME fusion_test_sequence_list_copy SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/list_copy.cpp)
cm_test(NAME fusion_test_sequence_list_iterator SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/list_iterator.cpp)
cm_test(NAME fusion_test_sequence_list_hash SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/list_hash.cpp)
cm_test(NAME fusion_test_sequence_list_make SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/list_make.cpp)
cm_test(NAME fusion_test_sequence_list_misc SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/list_misc.cpp)
cm_test(NAME fusion_test_sequence_list_mutate SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/list_mutate.cpp)
# cm_test(NAME fusion_test_sequence_list_nest SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/list_nest.cpp)
cm_test(NAME fusion_test_sequence_list_tie SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/list_tie.cpp)
cm_test(NAME fusion_test_sequence_list_value_at SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/list_value_at.cpp)
cm_test(NAME fusion_test_sequence_deque_comparison SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/deque_comparison.cpp)
cm_test(NAME fusion_test_sequence_deque_construction SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/deque_construction.cpp)
cm_test(NAME fusion_test_sequence_deque_copy SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/deque_copy.cpp)
cm_test(NAME fusion_test_sequence_deque_iterator SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/deque_iterator.cpp)
cm_test(NAME fusion_test_sequence_deque_hash SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/deque_hash.cpp)
# cm_test(NAME fusion_test_sequence_deque_is_constructible SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/deque_is_constructible.cpp COMPILE_ONLY)
cm_test(NAME fusion_test_sequence_deque_make SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/deque_make.cpp)
cm_test(NAME fusion_test_sequence_deque_misc SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/deque_misc.cpp)
cm_test(NAME fusion_test_sequence_deque_move SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/deque_move.cpp)
cm_test(NAME fusion_test_sequence_deque_mutate SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/deque_mutate.cpp)
# cm_test(NAME fusion_test_sequence_deque_nest SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/deque_nest.cpp)
cm_test(NAME fusion_test_sequence_deque_tie SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/deque_tie.cpp)
cm_test(NAME fusion_test_sequence_deque_value_at SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/deque_value_at.cpp)
cm_test(NAME fusion_test_sequence_front_extended_deque SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/front_extended_deque.cpp)
cm_test(NAME fusion_test_sequence_back_extended_deque SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/back_extended_deque.cpp)
cm_test(NAME fusion_test_sequence_make_list SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/make_list.cpp)
cm_test(NAME fusion_test_sequence_make_vector SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/make_vector.cpp)
cm_test(NAME fusion_test_sequence_map SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/map.cpp)
cm_test(NAME fusion_test_sequence_map_comparison SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/map_comparison.cpp)
cm_test(NAME fusion_test_sequence_map_construction SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/map_construction.cpp)
cm_test(NAME fusion_test_sequence_map_copy SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/map_copy.cpp)
cm_test(NAME fusion_test_sequence_map_misc SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/map_misc.cpp)
cm_test(NAME fusion_test_sequence_map_move SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/map_move.cpp)
cm_test(NAME fusion_test_sequence_map_mutate SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/map_mutate.cpp)
cm_test(NAME fusion_test_sequence_map_tie SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/map_tie.cpp)
cm_test(NAME fusion_test_sequence_nil SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/nil.cpp)
cm_test(NAME fusion_test_sequence_nview SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/nview.cpp)
cm_test(NAME fusion_test_sequence_reverse_view SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/reverse_view.cpp)
cm_test(NAME fusion_test_sequence_segmented_iterator_range SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/segmented_iterator_range.cpp)
cm_test(NAME fusion_test_sequence_set SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/set.cpp)
cm_test(NAME fusion_test_sequence_single_view SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/single_view.cpp)
cm_test(NAME fusion_test_sequence_std_pair SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/std_pair.cpp)
cm_test(NAME fusion_test_sequence_${CMAKE_WORKSPACE_NAME}_array SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/${CMAKE_WORKSPACE_NAME}_array.cpp)
cm_test(NAME fusion_test_sequence_array SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/array.cpp)
# cm_test(NAME fusion_test_sequence_std_array SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/std_array.cpp)
cm_test(NAME fusion_test_sequence_tuple_comparison SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/tuple_comparison.cpp)
cm_test(NAME fusion_test_sequence_tuple_construction SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/tuple_construction.cpp)
# cm_test(NAME fusion_test_sequence_tuple_conversion SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/tuple_conversion.cpp)
cm_test(NAME fusion_test_sequence_tuple_copy SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/tuple_copy.cpp)
cm_test(NAME fusion_test_sequence_tuple_element SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/tuple_element.cpp)
cm_test(NAME fusion_test_sequence_tuple_make SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/tuple_make.cpp)
cm_test(NAME fusion_test_sequence_tuple_misc SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/tuple_misc.cpp)
cm_test(NAME fusion_test_sequence_tuple_mutate SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/tuple_mutate.cpp)
# cm_test(NAME fusion_test_sequence_tuple_nest SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/tuple_nest.cpp)
cm_test(NAME fusion_test_sequence_tuple_hash SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/tuple_hash.cpp)
cm_test(NAME fusion_test_sequence_tuple_tie SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/tuple_tie.cpp)
# cm_test(NAME fusion_test_sequence_tuple_traits_maybe_variadic_tuple SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/tuple_traits.cpp)

# cm_test(NAME fusion_test_sequence_tuple_traits_no_variadic_tuple SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/tuple_traits.cpp)
#target_compile_definitions(sequence_tuple_traits_no_variadic_tuple PUBLIC BOOST_FUSION_DISABLE_VARIADIC_VECTOR)

cm_test(NAME fusion_test_sequence_transform_view SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/transform_view.cpp)
cm_test(NAME fusion_test_sequence_vector_comparison SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/vector_comparison.cpp)
cm_test(NAME fusion_test_sequence_vector_construction SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/vector_construction.cpp)
# cm_test(NAME fusion_test_sequence_vector_conversion SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/vector_conversion.cpp)
cm_test(NAME fusion_test_sequence_vector_copy SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/vector_copy.cpp)
cm_test(NAME fusion_test_sequence_vector_iterator SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/vector_iterator.cpp)
cm_test(NAME fusion_test_sequence_vector_make SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/vector_make.cpp)
cm_test(NAME fusion_test_sequence_vector_misc SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/vector_misc.cpp)
cm_test(NAME fusion_test_sequence_vector_move SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/vector_move.cpp)
cm_test(NAME fusion_test_sequence_vector_mutate SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/vector_mutate.cpp)
cm_test(NAME fusion_test_sequence_vector_n SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/vector_n.cpp)
# cm_test(NAME fusion_test_sequence_vector_nest SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/vector_nest.cpp)
cm_test(NAME fusion_test_sequence_vector_hash SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/vector_hash.cpp)
cm_test(NAME fusion_test_sequence_vector_tie SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/vector_tie.cpp)
# cm_test(NAME fusion_test_sequence_vector_traits_maybe_variadic_vector SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/vector_traits.cpp)

# cm_test(NAME fusion_test_sequence_vector_traits_no_variadic_vector SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/vector_traits.cpp)
# target_compile_definitions(sequence_vector_traits_no_variadic_vector PUBLIC BOOST_FUSION_DISABLE_VARIADIC_VECTOR)

cm_test(NAME fusion_test_sequence_vector_value_at SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/vector_value_at.cpp)
cm_test(NAME fusion_test_sequence_zip_view SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/zip_view.cpp)
cm_test(NAME fusion_test_sequence_zip_view2 SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/zip_view2.cpp)
cm_test(NAME fusion_test_sequence_zip_view_ignore SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/zip_view_ignore.cpp)
cm_test(NAME fusion_test_sequence_repetitive_view SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/repetitive_view.cpp)
cm_test(NAME fusion_test_sequence_deduce_sequence SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/deduce_sequence.cpp)
cm_test(NAME fusion_test_sequence_adapt_adt_named SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_adt_named.cpp)
# cm_test(NAME fusion_test_sequence_adapt_adt_named_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_adt_named_empty.cpp)
cm_test(NAME fusion_test_sequence_adapt_adt SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_adt.cpp)
# cm_test(NAME fusion_test_sequence_adapt_adt_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_adt_empty.cpp)
cm_test(NAME fusion_test_sequence_adapt_assoc_adt_named SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_assoc_adt_named.cpp)
# cm_test(NAME fusion_test_sequence_adapt_assoc_adt_named_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_assoc_adt_named_empty.cpp)
cm_test(NAME fusion_test_sequence_adapt_assoc_adt SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_assoc_adt.cpp)
# cm_test(NAME fusion_test_sequence_adapt_assoc_adt_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_assoc_adt_empty.cpp)
cm_test(NAME fusion_test_sequence_adapt_assoc_struct_named SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_assoc_struct_named.cpp)
# cm_test(NAME fusion_test_sequence_adapt_assoc_struct_named_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_assoc_struct_named_empty.cpp)
cm_test(NAME fusion_test_sequence_adapt_assoc_struct SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_assoc_struct.cpp)
# cm_test(NAME fusion_test_sequence_adapt_assoc_struct_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_assoc_struct_empty.cpp)
cm_test(NAME fusion_test_sequence_adapt_assoc_tpl_adt SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_assoc_tpl_adt.cpp)
# cm_test(NAME fusion_test_sequence_adapt_assoc_tpl_adt_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_assoc_tpl_adt_empty.cpp)
cm_test(NAME fusion_test_sequence_adapt_assoc_tpl_struct SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_assoc_tpl_struct.cpp)
# cm_test(NAME fusion_test_sequence_adapt_assoc_tpl_struct_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_assoc_tpl_struct_empty.cpp)
cm_test(NAME fusion_test_sequence_adapt_struct_named SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_struct_named.cpp)
# cm_test(NAME fusion_test_sequence_adapt_struct_named_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_struct_named_empty.cpp)
cm_test(NAME fusion_test_sequence_adapt_struct SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_struct.cpp)
# cm_test(NAME fusion_test_sequence_adapt_struct_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_struct_empty.cpp)
cm_test(NAME fusion_test_sequence_adapt_tpl_adt SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_tpl_adt.cpp)
# cm_test(NAME fusion_test_sequence_adapt_tpl_adt_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_tpl_adt_empty.cpp)
cm_test(NAME fusion_test_sequence_adapt_tpl_struct SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_tpl_struct.cpp)
# cm_test(NAME fusion_test_sequence_adapt_tpl_struct_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adapt_tpl_struct_empty.cpp)
cm_test(NAME fusion_test_sequence_adt_attribute_proxy SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/adt_attribute_proxy.cpp)
cm_test(NAME fusion_test_sequence_define_struct SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_struct.cpp)
# cm_test(NAME fusion_test_sequence_define_struct_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_struct_empty.cpp)
# cm_test(NAME fusion_test_sequence_define_struct_move SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_struct_move.cpp)
cm_test(NAME fusion_test_sequence_define_struct_inline SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_struct_inline.cpp)
# cm_test(NAME fusion_test_sequence_define_struct_inline_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_struct_inline_empty.cpp)
# cm_test(NAME fusion_test_sequence_define_struct_inline_move SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_struct_inline_move.cpp)
cm_test(NAME fusion_test_sequence_define_assoc_struct SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_assoc_struct.cpp)
# cm_test(NAME fusion_test_sequence_define_assoc_struct_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_assoc_struct_empty.cpp)
# cm_test(NAME fusion_test_sequence_define_assoc_struct_move SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_assoc_struct_move.cpp)
cm_test(NAME fusion_test_sequence_define_tpl_struct SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_tpl_struct.cpp)
# cm_test(NAME fusion_test_sequence_define_tpl_struct_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_tpl_struct_empty.cpp)
# cm_test(NAME fusion_test_sequence_define_tpl_struct_move SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_tpl_struct_move.cpp)
cm_test(NAME fusion_test_sequence_define_tpl_struct_inline SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_tpl_struct_inline.cpp)
# cm_test(NAME fusion_test_sequence_define_tpl_struct_inline_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_tpl_struct_inline_empty.cpp)
# cm_test(NAME fusion_test_sequence_define_tpl_struct_inline_move SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_tpl_struct_inline_move.cpp)
cm_test(NAME fusion_test_sequence_define_assoc_tpl_struct SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_assoc_tpl_struct.cpp)
# cm_test(NAME fusion_test_sequence_define_assoc_tpl_struct_empty SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_assoc_tpl_struct_empty.cpp)
# cm_test(NAME fusion_test_sequence_define_assoc_tpl_struct_move SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/define_assoc_tpl_struct_move.cpp)
cm_test(NAME fusion_test_sequence_std_tuple SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/std_tuple.cpp)
cm_test(NAME fusion_test_sequence_std_tuple_iterator SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/std_tuple_iterator.cpp)
cm_test(NAME fusion_test_sequence_ref_vector SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/ref_vector.cpp)
cm_test(NAME fusion_test_sequence_flatten_view SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/flatten_view.cpp)

cm_test(NAME fusion_test_sequence_size SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/size.cpp COMPILE_ONLY)

cm_test(NAME fusion_test_functional_fused SOURCES ${CURRENT_TEST_SOURCES_DIR}/functional/fused.cpp)
cm_test(NAME fusion_test_functional_fused_function_object SOURCES ${CURRENT_TEST_SOURCES_DIR}/functional/fused_function_object.cpp)
cm_test(NAME fusion_test_functional_fused_procedure SOURCES ${CURRENT_TEST_SOURCES_DIR}/functional/fused_procedure.cpp)
cm_test(NAME fusion_test_functional_unfused SOURCES ${CURRENT_TEST_SOURCES_DIR}/functional/unfused.cpp)
cm_test(NAME fusion_test_functional_unfused_typed SOURCES ${CURRENT_TEST_SOURCES_DIR}/functional/unfused_typed.cpp)
cm_test(NAME fusion_test_functional_make_fused SOURCES ${CURRENT_TEST_SOURCES_DIR}/functional/make_fused.cpp)
cm_test(NAME fusion_test_functional_make_fused_function_object SOURCES ${CURRENT_TEST_SOURCES_DIR}/functional/make_fused_function_object.cpp)
cm_test(NAME fusion_test_functional_make_fused_procedure SOURCES ${CURRENT_TEST_SOURCES_DIR}/functional/make_fused_procedure.cpp)
cm_test(NAME fusion_test_functional_make_unfused SOURCES ${CURRENT_TEST_SOURCES_DIR}/functional/make_unfused.cpp)
cm_test(NAME fusion_test_functional_invoke SOURCES ${CURRENT_TEST_SOURCES_DIR}/functional/invoke.cpp)
cm_test(NAME fusion_test_functional_invoke_function_object SOURCES ${CURRENT_TEST_SOURCES_DIR}/functional/invoke_function_object.cpp)
cm_test(NAME fusion_test_functional_invoke_procedure SOURCES ${CURRENT_TEST_SOURCES_DIR}/functional/invoke_procedure.cpp)
cm_test(NAME fusion_test_sequence_swap SOURCES ${CURRENT_TEST_SOURCES_DIR}/sequence/swap.cpp)

cm_test(NAME fusion_test_support_pair_deque SOURCES ${CURRENT_TEST_SOURCES_DIR}/support/pair_deque.cpp COMPILE_ONLY)
cm_test(NAME fusion_test_support_pair_list SOURCES ${CURRENT_TEST_SOURCES_DIR}/support/pair_list.cpp COMPILE_ONLY)
cm_test(NAME fusion_test_support_pair_map SOURCES ${CURRENT_TEST_SOURCES_DIR}/support/pair_map.cpp COMPILE_ONLY)
cm_test(NAME fusion_test_support_pair_set SOURCES ${CURRENT_TEST_SOURCES_DIR}/support/pair_set.cpp COMPILE_ONLY)
cm_test(NAME fusion_test_support_pair_vector SOURCES ${CURRENT_TEST_SOURCES_DIR}/support/pair_vector.cpp COMPILE_ONLY)
# cm_test(NAME fusion_test_support_pair_nest SOURCES ${CURRENT_TEST_SOURCES_DIR}/support/pair_nest.cpp COMPILE_ONLY)
# cm_test(NAME fusion_test_support_index_sequence SOURCES ${CURRENT_TEST_SOURCES_DIR}/support/index_sequence.cpp COMPILE_ONLY)
# cm_test(NAME fusion_test_support_and SOURCES ${CURRENT_TEST_SOURCES_DIR}/support/and.cpp COMPILE_ONLY)

#   [ compile-fail xxx.cpp :  :  :  :  ]
