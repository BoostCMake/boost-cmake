9a10,11
> #define BOOST_TEST_MAIN
> #include <boost/test/unit_test.hpp>
843,844c845
< // test main
< test_suite* init_unit_test_suite(int /*argc*/, char* /*argv*/[]) {
---
> BOOST_AUTO_TEST_SUITE(unit_tests_for_the_circular_buffer_suite)
846,847c847,855
<     test_suite* tests = BOOST_TEST_SUITE("Unit tests for the circular_buffer.");
<     add_common_tests(tests);
---
> BOOST_AUTO_TEST_CASE(iterator_constructor_and_assign_test_case)
> {
>     iterator_constructor_and_assign_test();
> }
> 
> BOOST_AUTO_TEST_CASE(iterator_reference_test_case)
> {
>     iterator_reference_test();
> }
849,862c857,860
<     tests->add(BOOST_TEST_CASE(&iterator_constructor_and_assign_test));
<     tests->add(BOOST_TEST_CASE(&iterator_reference_test));
<     tests->add(BOOST_TEST_CASE(&iterator_difference_test));
<     tests->add(BOOST_TEST_CASE(&iterator_increment_test));
<     tests->add(BOOST_TEST_CASE(&iterator_decrement_test));
<     tests->add(BOOST_TEST_CASE(&iterator_addition_test));
<     tests->add(BOOST_TEST_CASE(&iterator_subtraction_test));
<     tests->add(BOOST_TEST_CASE(&iterator_element_access_test));
<     tests->add(BOOST_TEST_CASE(&iterator_comparison_test));
<     tests->add(BOOST_TEST_CASE(&iterator_invalidation_test));
<     tests->add(BOOST_TEST_CASE(&exception_safety_test));
<     tests->add(BOOST_TEST_CASE(&move_container_values_except));
<     tests->add(BOOST_TEST_CASE(&move_container_values_resetting_except));
<     tests->add(BOOST_TEST_CASE(&move_container_values_resetting_noexcept));
---
> BOOST_AUTO_TEST_CASE(iterator_difference_test_case)
> {
>     iterator_difference_test();
> }
864c862,864
<     return tests;
---
> BOOST_AUTO_TEST_CASE(iterator_increment_test_case)
> {
>     iterator_increment_test();
865a866,917
> 
> BOOST_AUTO_TEST_CASE(iterator_decrement_test_case)
> {
>     iterator_decrement_test();
> }
> 
> BOOST_AUTO_TEST_CASE(iterator_addition_test_case)
> {
>     iterator_addition_test();
> }
> 
> BOOST_AUTO_TEST_CASE(iterator_subtraction_test_case)
> {
>     iterator_subtraction_test();
> }
> 
> BOOST_AUTO_TEST_CASE(iterator_element_access_test_case)
> {
>     iterator_element_access_test();
> }
> 
> BOOST_AUTO_TEST_CASE(iterator_comparison_test_case)
> {
>     iterator_comparison_test();
> }
> 
> BOOST_AUTO_TEST_CASE(iterator_invalidation_test_case)
> {
>     iterator_invalidation_test();
> }
> 
> BOOST_AUTO_TEST_CASE(exception_safety_test_case)
> {
>     exception_safety_test();
> }
> 
> BOOST_AUTO_TEST_CASE(move_container_values_except_case)
> {
>     move_container_values_except();
> }
> 
> BOOST_AUTO_TEST_CASE(move_container_values_resetting_except_case)
> {
>     move_container_values_resetting_except();
> }
> 
> BOOST_AUTO_TEST_CASE(move_container_values_resetting_noexcept_case)
> {
>     move_container_values_resetting_noexcept();
> }
> 
> BOOST_AUTO_TEST_SUITE_END()
