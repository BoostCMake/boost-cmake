51c51
<            CRC_PARM_TYPE FiXo, bool ReIn, bool ReRe >
---
>         CRC_PARM_TYPE FiXo, bool ReIn, bool ReRe >
66c66
<       optimal_crc_type;
---
>             optimal_crc_type;
77c77
<                       0x38, 0x39 };
---
>                                     0x38, 0x39 };
91,92c91,92
<  boost::uint32_t (*crc_func)(void const *, std::size_t),
<  boost::uint32_t expected, void const *data, std::size_t length );
---
>                              boost::uint32_t (*crc_func)(void const *, std::size_t),
>                              boost::uint32_t expected, void const *data, std::size_t length );
107c107
<            CRC_PARM_TYPE FiXo, bool ReIn, bool ReRe >
---
>         CRC_PARM_TYPE FiXo, bool ReIn, bool ReRe >
110,112c110,112
< (
<     typename PRIVATE_TESTER_NAME::value_type  expected
< )
---
>         (
>                 typename PRIVATE_TESTER_NAME::value_type  expected
>         )
119c119
<      ReRe>( std_data, std_data_len );
---
>             ReRe>( std_data, std_data_len );
130c130
<            CRC_PARM_TYPE FiXo, bool ReIn, bool ReRe >
---
>         CRC_PARM_TYPE FiXo, bool ReIn, bool ReRe >
133,135c133,135
< (
<     typename PRIVATE_TESTER_NAME::value_type  expected
< )
---
>         (
>                 typename PRIVATE_TESTER_NAME::value_type  expected
>         )
142,143c142,143
<      fast_crc1.get_initial_remainder(), fast_crc1.get_final_xor_value(),
<      fast_crc1.get_reflect_input(), fast_crc1.get_reflect_remainder() );
---
>                                  fast_crc1.get_initial_remainder(), fast_crc1.get_final_xor_value(),
>                                  fast_crc1.get_reflect_input(), fast_crc1.get_reflect_remainder() );
146c146
<      slow_crc1.get_initial_remainder() );
---
>                  slow_crc1.get_initial_remainder() );
157,160c157,160
<      optimal_crc_type::truncated_polynominal, optimal_crc_type::initial_remainder,
<      optimal_crc_type::final_xor_value, optimal_crc_type::reflect_input,
<      optimal_crc_type::reflect_remainder>
<       fast_crc2( fast_crc1.get_interim_remainder() );
---
>             optimal_crc_type::truncated_polynominal, optimal_crc_type::initial_remainder,
>             optimal_crc_type::final_xor_value, optimal_crc_type::reflect_input,
>             optimal_crc_type::reflect_remainder>
>             fast_crc2( fast_crc1.get_interim_remainder() );
162,164c162,164
<      slow_crc1.get_truncated_polynominal(), slow_crc1.get_interim_remainder(),
<      slow_crc1.get_final_xor_value(), slow_crc1.get_reflect_input(),
<      slow_crc1.get_reflect_remainder() );
---
>             slow_crc1.get_truncated_polynominal(), slow_crc1.get_interim_remainder(),
>             slow_crc1.get_final_xor_value(), slow_crc1.get_reflect_input(),
>             slow_crc1.get_reflect_remainder() );
175c175
<            CRC_PARM_TYPE FiXo, bool ReIn, bool ReRe >
---
>         CRC_PARM_TYPE FiXo, bool ReIn, bool ReRe >
178,179c178,179
< (
< )
---
>         (
>         )
238c238
<            CRC_PARM_TYPE FiXo, bool ReIn, bool ReRe >
---
>         CRC_PARM_TYPE FiXo, bool ReIn, bool ReRe >
241,244c241,244
< (
<     char const *                              test_name,
<     typename PRIVATE_TESTER_NAME::value_type  expected
< )
---
>         (
>                 char const *                              test_name,
>                 typename PRIVATE_TESTER_NAME::value_type  expected
>         )
259,262c259,262
< (
<     void const *  buffer,
<     std::size_t   byte_count
< )
---
>         (
>                 void const *  buffer,
>                 std::size_t   byte_count
>         )
265c265
<      true, true );
---
>                                             true, true );
276,279c276,279
< (
<     void const *  buffer,
<     std::size_t   byte_count
< )
---
>         (
>                 void const *  buffer,
>                 std::size_t   byte_count
>         )
291,294c291,294
< (
<     boost::uint32_t  value,
<     std::size_t      bits
< )
---
>         (
>                 boost::uint32_t  value,
>                 std::size_t      bits
>         )
311,314c311,314
< (
<     void const *  buffer,
<     std::size_t   byte_count
< )
---
>         (
>                 void const *  buffer,
>                 std::size_t   byte_count
>         )
349c349
<              = quick_reflect( remainder, 32 );
---
>                     = quick_reflect( remainder, 32 );
374,380c374,380
< (
<     char const *       name,
<     boost::uint32_t  (*crc_func)(void const *, std::size_t),
<     boost::uint32_t    expected,
<     void const *       data,
<     std::size_t        length
< )
---
>         (
>                 char const *       name,
>                 boost::uint32_t  (*crc_func)(void const *, std::size_t),
>                 boost::uint32_t    expected,
>                 void const *       data,
>                 std::size_t        length
>         )
418c418
<      << " run/s" << std::endl;
---
>          << " run/s" << std::endl;
425,426c425,426
< (
< )
---
>         (
>         )
452c452
<      basic_result, ran_data, sizeof(ran_data) );
---
>                                            basic_result, ran_data, sizeof(ran_data) );
454c454
<      optimal_result, ran_data, sizeof(ran_data) );
---
>                                              optimal_result, ran_data, sizeof(ran_data) );
456c456
<      quick_result, ran_data, sizeof(ran_data) );
---
>                                            quick_result, ran_data, sizeof(ran_data) );
460c460
<      / quick_rate * 100.0 << "% slower than the reference version.\n";
---
>                                                  / quick_rate * 100.0 << "% slower than the reference version.\n";
462c462
<      / quick_rate * 100.0 << "% slower than the reference version.\n";
---
>                                                / quick_rate * 100.0 << "% slower than the reference version.\n";
464,465c464,465
<      / optimal_rate * 100.0 << "% slower than the optimal Boost version."
<      << endl;
---
>                                                / optimal_rate * 100.0 << "% slower than the optimal Boost version."
>          << endl;
472,474c472,474
< (
<     boost::uint32_t  x
< )
---
>         (
>                 boost::uint32_t  x
>         )
491,493c491,493
< (
<     boost::uint32_t  x
< )
---
>         (
>                 boost::uint32_t  x
>         )
510,511c510,511
< (
< )
---
>         (
>         )
513c513
<     #define PRIVATE_ACRC_FUNC  boost::augmented_crc<32, 0x04C11DB7>
---
> #define PRIVATE_ACRC_FUNC  boost::augmented_crc<32, 0x04C11DB7>
555c555
<      false>( ran_data, data_size );
---
>             false>( ran_data, data_size );
581c581
<      * sizeof(ran_data[0]), init_rem );
---
>                                                  * sizeof(ran_data[0]), init_rem );
583c583
<      - mid_index * sizeof(ran_data[0]), ran_crc_check );
---
>                                                              - mid_index * sizeof(ran_data[0]), ran_crc_check );
590c590
<      init_rem );
---
>                                                       init_rem );
602c602
<     #undef PRIVATE_ACRC_FUNC
---
> #undef PRIVATE_ACRC_FUNC
609,610c609,610
< (
< )
---
>         (
>         )
613c613
<      << std::endl;
---
>               << std::endl;
620,625c620,625
<       = {
<             { 0x3A, 0xC4, 0x08, 0x06 },
<             { 0x42, 0xC5, 0x0A, 0x41 },
<             { 0x4A, 0xC5, 0x08, 0x22 },
<             { 0x52, 0xC4, 0x08, 0x05 }
<         };
---
>             = {
>                     { 0x3A, 0xC4, 0x08, 0x06 },
>                     { 0x42, 0xC5, 0x0A, 0x41 },
>                     { 0x4A, 0xC5, 0x08, 0x22 },
>                     { 0x52, 0xC4, 0x08, 0x05 }
>             };
646,647c646,647
<     #define PRIVATE_CRC_FUNC   boost::crc<3, 0x03, 0, 0, false, false>
<     #define PRIVATE_ACRC_FUNC  boost::augmented_crc<3, 0x03>
---
> #define PRIVATE_CRC_FUNC   boost::crc<3, 0x03, 0, 0, false, false>
> #define PRIVATE_ACRC_FUNC  boost::augmented_crc<3, 0x03>
656,657c656,657
<     #undef PRIVATE_ACRC_FUNC
<     #undef PRIVATE_CRC_FUNC
---
> #undef PRIVATE_ACRC_FUNC
> #undef PRIVATE_CRC_FUNC
663,664c663,664
< (
< )
---
>         (
>         )
667c667
<      << std::endl;
---
>               << std::endl;
676,681c676,681
<       = {
<             { 0x80, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41,
<               0x42, 0x43, 0x44, 0x45, 0x46 },
<             { 0x80, 0x54, 0x54, 0x49, 0x20, 0x55, 0x4E, 0x41, 0x56, 0x41, 0x49,
<               0x4C, 0x41, 0x42, 0x4C, 0x45 }
<         };
---
>             = {
>                     { 0x80, 0x31, 0x32, 0x33, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39, 0x41,
>                             0x42, 0x43, 0x44, 0x45, 0x46 },
>                     { 0x80, 0x54, 0x54, 0x49, 0x20, 0x55, 0x4E, 0x41, 0x56, 0x41, 0x49,
>                             0x4C, 0x41, 0x42, 0x4C, 0x45 }
>             };
695,696c695,696
<     #define PRIVATE_CRC_FUNC   boost::crc<7, 0x09, 0, 0, false, false>
<     #define PRIVATE_ACRC_FUNC  boost::augmented_crc<7, 0x09>
---
> #define PRIVATE_CRC_FUNC   boost::crc<7, 0x09, 0, 0, false, false>
> #define PRIVATE_ACRC_FUNC  boost::augmented_crc<7, 0x09>
703,704c703,704
<     #undef PRIVATE_ACRC_FUNC
<     #undef PRIVATE_CRC_FUNC
---
> #undef PRIVATE_ACRC_FUNC
> #undef PRIVATE_CRC_FUNC
719,722c719,722
< (
<     int         ,   // "argc" is unused
<     char *      []  // "argv" is unused
< )
---
>         (
>                 int         ,   // "argc" is unused
>                 char *      []  // "argv" is unused
>         )
731c731
<       crc_32_tester;
---
>             crc_32_tester;
761c761
< }
---
> }
\ No newline at end of file
